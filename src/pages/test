import React, { useState } from "react";
import { useSelector, useDispatch } from "react-redux";
import MainLayout from "../components/layout/MainLayout";
import "../assets/css/UserProfile.style.css";
import Button from "../components/Button";
import InputField from "../components/InputField";
import { useNavigate } from "react-router-dom";
import { updateUserProfile } from "../store/actions/userActions"; // hypothetical action to update user profile in redux

const UpdateUserProfilePage = () => {
  const userInfo = useSelector((state) => state.user.userProfile);
  const dispatch = useDispatch();
  const navigate = useNavigate();

  const [updatedData, setUpdatedData] = useState({});
  const [initialData] = useState(userInfo);

  const handleInputChange = (field, value) => {
    if (value === initialData[field]) {
      // If value reverts to initial value, remove from updatedData
      const { [field]: _, ...remaining } = updatedData;
      setUpdatedData(remaining);
    } else {
      setUpdatedData((prevData) => ({
        ...prevData,
        [field]: value,
      }));
    }
  };

  const handleSubmit = () => {
    if (Object.keys(updatedData).length > 0) {
      dispatch(updateUserProfile(updatedData));
      navigate("/user-profile");
    } else {
      alert("No changes made to the profile.");
    }
  };

  return (
    <MainLayout currentPath="/update-user-profile" currentPage="Update Profile">
      <div className="profile-info">
        {/* Avatar and Buttons */}
        <div className="profile-avatar-container">
          <img
            src={userInfo.avatar || "default-avatar.png"}
            alt="User Avatar"
            className="profile-avatar"
          />
          <Button className="avatar-button change-avatar-button">
            Đổi ảnh đại diện
          </Button>
          <Button className="avatar-button delete-avatar-button">
            Xóa ảnh đại diện
          </Button>
        </div>

        {/* Personal Information */}
        <div className="profile-info-section">
          <h2 className="profile-section-title">Thông tin cá nhân</h2>
          <div className="profile-info-row">
            <div className="profile-info-field">
              <label>Họ tên</label>
              <InputField
                type="text"
                className="profile-input"
                value={updatedData.fullname ?? userInfo.fullname || ""}
                onChange={(e) => handleInputChange("fullname", e.target.value)}
              />
            </div>
            <div className="profile-info-field">
              <label>Ngày sinh</label>
              <InputField
                type="date"
                className="profile-input"
                value={updatedData.birthday ?? userInfo.birthday || ""}
                onChange={(e) => handleInputChange("birthday", e.target.value)}
              />
            </div>
          </div>
          <div className="profile-info-row">
            <div className="profile-info-field">
              <label>Số CCCD</label>
              <InputField
                type="text"
                className="profile-input"
                value={updatedData.identifyCardNumber ?? userInfo.identifyCardNumber || ""}
                onChange={(e) => handleInputChange("identifyCardNumber", e.target.value)}
              />
            </div>
            <div className="profile-info-field">
              <label>Giới tính</label>
              <select
                className="profile-input"
                value={updatedData.gender ?? userInfo.gender}
                onChange={(e) => handleInputChange("gender", e.target.value)}
              >
                <option value="MALE">Nam</option>
                <option value="FEMALE">Nữ</option>
              </select>
            </div>
          </div>
        </div>

        {/* Contact Information */}
        <div className="profile-info-section">
          <div className="profile-section-title">Thông tin liên lạc</div>
          <div className="profile-info-row">
            <div className="profile-info-field">
              <label>Email riêng</label>
              <InputField
                type="email"
                className="profile-input"
                value={updatedData.personalEmail ?? userInfo.personalEmail || ""}
                onChange={(e) => handleInputChange("personalEmail", e.target.value)}
              />
            </div>
            <div className="profile-info-field">
              <label>Email làm việc</label>
              <InputField
                type="email"
                className="profile-input"
                value={updatedData.workEmail ?? userInfo.workEmail || ""}
                onChange={(e) => handleInputChange("workEmail", e.target.value)}
              />
            </div>
          </div>
          <div className="profile-info-row">
            <div className="profile-info-field">
              <label>Số điện thoại</label>
              <InputField
                type="text"
                className="profile-input"
                value={updatedData.phoneNumbers ?? userInfo.phoneNumbers.join(", ") || ""}
                onChange={(e) => handleInputChange("phoneNumbers", e.target.value)}
              />
            </div>
          </div>
        </div>

        {/* Address Information */}
        <div className="profile-info-section">
          <div className="profile-section-title">Địa chỉ</div>
          <div className="profile-info-row">
            <div className="profile-info-field profile-info-field-full">
              <label>Địa chỉ nhà</label>
              <InputField
                type="text"
                className="profile-input-address"
                value={updatedData.homeAddress ?? userInfo.homeAddress || ""}
                onChange={(e) => handleInputChange("homeAddress", e.target.value)}
              />
            </div>
          </div>
          <div className="profile-info-row">
            <div className="profile-info-field profile-info-field-full">
              <label>Địa chỉ nơi làm việc</label>
              <InputField
                type="text"
                className="profile-input-address"
                value={updatedData.workAddress ?? userInfo.workAddress || ""}
                onChange={(e) => handleInputChange("workAddress", e.target.value)}
              />
            </div>
          </div>
        </div>

        <Button
          className="update-profile-button"
          onClick={handleSubmit}
        >
          Cập nhật thay đổi
        </Button>
      </div>
    </MainLayout>
  );
};

export default UpdateUserProfilePage;
